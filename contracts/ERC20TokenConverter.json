{
  "contractName": "ERC20TokenConverter",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_roleRegistry",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_fromToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_toToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "ConvertingTransfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_fromToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_toToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "convert",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_roleRegistry\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_fromToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_toToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"ConvertingTransfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"convert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/coder/project/contracts/_library/tokens/ERC20/ERC20TokenConverter.sol\":\"ERC20TokenConverter\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/coder/project/contracts/_library/authentication/GateKeeper.sol\":{\"keccak256\":\"0x7b1a8912b0bf2f6ab4a2e025c2a08d79acd31b5677da1d5c512a1411e4daa964\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e4b6525a9fd4ec26e988079f894ef57b07bdc96538ece92833faccbf5ed301e8\",\"dweb:/ipfs/QmXtwZWG52WaQJ9E5yukTqyW5YdpNy1xwWU1CdxAnZqAjr\"]},\"/home/coder/project/contracts/_library/authentication/RoleRegistry.sol\":{\"keccak256\":\"0x29676b88be2af76528e79765ef4648618ed7ceb23c6199a46f609608a396bef6\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b7d2398b96e6798adac56dbd7a1157cf97e6249bb3c7445e86985a2ba606ed52\",\"dweb:/ipfs/QmQzwtbodEPaCTyoSgqcsX2o8HYmAav8XWAuJymDx8ECF1\"]},\"/home/coder/project/contracts/_library/authentication/Secured.sol\":{\"keccak256\":\"0x76363f1bd95a33edcd7cee1beff05b5a97fe20d705abe29cc0dce335d722d1b6\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://98ef87fac29d5f4da8d8f9089d5848c680636611f543ebce69823d3fe7219bb5\",\"dweb:/ipfs/QmT3X3RW2riWU4KfAEGKKucW5k4bn3nwyCzMfmEwHL6bEJ\"]},\"/home/coder/project/contracts/_library/authentication/interfaces/IRoleRegistry.sol\":{\"keccak256\":\"0xc0e91d25211903b0782943a20477e2bdc0b81444ae69b378b67dc033eb75ceff\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e020cb3e46c1e0616b6b44bf7de144cefc951e096d1a7162134c2051406d58ac\",\"dweb:/ipfs/QmVC6x42uZVdoXwqxdcBfS2aqTjAQJxQ3PJMgobEAd43XZ\"]},\"/home/coder/project/contracts/_library/tokens/ERC20/ERC20Token.sol\":{\"keccak256\":\"0x15d64f973742b2d8f845b0de1c6cce1352bea64b8e7e2581ed61887e5a6f9861\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a4597a609a8a26a36b65ad49170262f6f7d584674808d98c624c6b83a87fb975\",\"dweb:/ipfs/QmcTXSephnaYYDcEjvYfffuqKaNLUKLXpVWHzmQEcANBGb\"]},\"/home/coder/project/contracts/_library/tokens/ERC20/ERC20TokenConverter.sol\":{\"keccak256\":\"0xc7a2eb2c5c0a349159027d279f81e0c377abb45946bd94d4dfab5ca4d6173898\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://27f686d1bdabd19da5133074e87f8bc1eb8b22f522a44b77e7f7fb2325d3f23c\",\"dweb:/ipfs/QmcyyBkgKRuGuz8khg5kGm5H5HDdTVdZB1LejhkN5N1gBQ\"]},\"/home/coder/project/contracts/_library/tokens/ERC20/IERC20Token.sol\":{\"keccak256\":\"0xc6f59437b8c89d70a75c8e7d189b35ea00f3f7f2448ab33e99cf62621faf3e01\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://25ad5d2f23e133c7bb43c587e59016ab5afcbc614c9625de252efc2b8d32242a\",\"dweb:/ipfs/QmXgyVnNfyvSnC6uRsdGdvyeewWpNTS5rA1VYMyf3u2FPE\"]},\"/home/coder/project/contracts/_library/tokens/IApproveAndCallable.sol\":{\"keccak256\":\"0x3559a64c5937f8446b2daa9fe602e8b7a82cb4e5cad9a2e191489148e81d0f84\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://0f65b1239c9d984708632e795af5d0c2786e55a100fe64a2f0756a0a033f07f4\",\"dweb:/ipfs/QmRFeH2rBqecnozkoDUGLNV5kZQwFtwdpTNjm6fbZB5Vef\"]},\"/home/coder/project/contracts/_library/tokens/IWithDecimalFields.sol\":{\"keccak256\":\"0x5f1278bbf4471ab55f9eb8511f50e159fb8c0066115a70225f14cf87274e2494\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://936dfd7774616676c5b171e2fbdb4941da86908459b456d1ee0a4b26a22e1140\",\"dweb:/ipfs/Qmav8F84SLZXtZUHpWZk6ZQdmGy58nPgDeP5PNvEm83Zrm\"]},\"/home/coder/project/contracts/_library/utility/conversions/Converter.sol\":{\"keccak256\":\"0x2c64ab5905db2e804151d86c969c9c4a7b55afec1b8ea29dbf535efb8ee95b2f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://921eee343945d2723a4e55432b24e33c6dcb05828bb90608d4b711c9c7b536f2\",\"dweb:/ipfs/QmbAuaLFDWfUH1brqFPbFrL6DPfAswhxsuRBJarVTu2ZAG\"]},\"/home/coder/project/contracts/_library/utility/metadata/IpfsFieldContainer.sol\":{\"keccak256\":\"0x57552ced13037e663c2456e18077d0d6deba35a5aa84bce64ee3a4fe856901fa\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://ef58835148554f054b3b722d12acaf0c9c371e44f48b16679bd0d43320b2b047\",\"dweb:/ipfs/QmV15yVaEt8bLVUfrmZtqvxtrujhbM6mJHGBUWx6gDQgnu\"]},\"/home/coder/project/contracts/_library/utility/syncing/Syncable.sol\":{\"keccak256\":\"0x25515c7d9ce6dfc33d32d330d62e34fa875ccc29d4527585a97c563340b0527b\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://05e03b025cd9ebd7b3be99dc42634c4dcf048797df09348d739180d37e81a8be\",\"dweb:/ipfs/QmcLMEU2B2wEb5zsXC1QQAcmCp7ycEobeZc3jD5pX2Tvpa\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516104ca3803806104ca83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610082565b600060208284031215610065578081fd5b81516001600160a01b038116811461007b578182fd5b9392505050565b610439806100916000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80638a8ad2d714610030575b600080fd5b61004361003e366004610381565b610045565b005b600054604051633f784de560e11b81526001600160a01b03858116600483015290911690637ef09bca9060240160206040518083038186803b15801561008a57600080fd5b505afa15801561009e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100c291906103dc565b61011f5760405162461bcd60e51b815260206004820152602360248201527f5f746f206e6565647320746f20626520616e20617574686f726973656420706160448201526272747960e81b60648201526084015b60405180910390fd5b6001600160a01b03841633146101775760405162461bcd60e51b815260206004820152601f60248201527f5f66726f6d546f6b656e2073686f756c64206265207468652073656e646572006044820152606401610116565b604051632770a7eb60e21b81526001600160a01b03868116600483015260248201839052859190821690639dc29fac90604401602060405180830381600087803b1580156101c457600080fd5b505af11580156101d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101fc91906103dc565b6102405760405162461bcd60e51b8152602060048201526015602482015274189d5c9b881dd85cc81d5b9cdd58d8d95cd99d5b1b605a1b6044820152606401610116565b6040516340c10f1960e01b81526001600160a01b038581166004830152602482018490528491908216906340c10f1990604401602060405180830381600087803b15801561028d57600080fd5b505af11580156102a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c591906103dc565b6103095760405162461bcd60e51b81526020600482015260156024820152741b5a5b9d081dd85cc81d5b9cdd58d8d95cd99d5b1b605a1b6044820152606401610116565b604080516001600160a01b0388811682528681166020830152918101859052818716918916907fc5ad861cbabeba9a8e8656a5b778134b17bfa8f2ac4dd72d6f28fd14d4ef9ee89060600160405180910390a350505050505050565b80356001600160a01b038116811461037c57600080fd5b919050565b600080600080600060a08688031215610398578081fd5b6103a186610365565b94506103af60208701610365565b93506103bd60408701610365565b92506103cb60608701610365565b949793965091946080013592915050565b6000602082840312156103ed578081fd5b815180151581146103fc578182fd5b939250505056fea2646970667358221220d78caf6688cfbcb799b348d001fb89bc7643429f26a2afc2794b84ab2287631364736f6c63430008030033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c80638a8ad2d714610030575b600080fd5b61004361003e366004610381565b610045565b005b600054604051633f784de560e11b81526001600160a01b03858116600483015290911690637ef09bca9060240160206040518083038186803b15801561008a57600080fd5b505afa15801561009e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100c291906103dc565b61011f5760405162461bcd60e51b815260206004820152602360248201527f5f746f206e6565647320746f20626520616e20617574686f726973656420706160448201526272747960e81b60648201526084015b60405180910390fd5b6001600160a01b03841633146101775760405162461bcd60e51b815260206004820152601f60248201527f5f66726f6d546f6b656e2073686f756c64206265207468652073656e646572006044820152606401610116565b604051632770a7eb60e21b81526001600160a01b03868116600483015260248201839052859190821690639dc29fac90604401602060405180830381600087803b1580156101c457600080fd5b505af11580156101d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101fc91906103dc565b6102405760405162461bcd60e51b8152602060048201526015602482015274189d5c9b881dd85cc81d5b9cdd58d8d95cd99d5b1b605a1b6044820152606401610116565b6040516340c10f1960e01b81526001600160a01b038581166004830152602482018490528491908216906340c10f1990604401602060405180830381600087803b15801561028d57600080fd5b505af11580156102a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c591906103dc565b6103095760405162461bcd60e51b81526020600482015260156024820152741b5a5b9d081dd85cc81d5b9cdd58d8d95cd99d5b1b605a1b6044820152606401610116565b604080516001600160a01b0388811682528681166020830152918101859052818716918916907fc5ad861cbabeba9a8e8656a5b778134b17bfa8f2ac4dd72d6f28fd14d4ef9ee89060600160405180910390a350505050505050565b80356001600160a01b038116811461037c57600080fd5b919050565b600080600080600060a08688031215610398578081fd5b6103a186610365565b94506103af60208701610365565b93506103bd60408701610365565b92506103cb60608701610365565b949793965091946080013592915050565b6000602082840312156103ed578081fd5b815180151581146103fc578182fd5b939250505056fea2646970667358221220d78caf6688cfbcb799b348d001fb89bc7643429f26a2afc2794b84ab2287631364736f6c63430008030033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:326:160",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:160",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:229:160",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:26:160",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "150:6:160"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "158:6:160"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:160"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:22:160"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:22:160"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:160"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:160"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:160"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:160"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:160",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:160"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:160"
                  },
                  "nodeType": "YulIf",
                  "src": "105:2:160"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "176:29:160",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "195:9:160"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "189:5:160"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "189:16:160"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "180:5:160",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "268:26:160",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "277:6:160"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "285:6:160"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "270:6:160"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "270:22:160"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "270:22:160"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "227:5:160"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "238:5:160"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "253:3:160",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "258:1:160",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "249:3:160"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "249:11:160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "262:1:160",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "245:3:160"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "245:19:160"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "234:3:160"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "234:31:160"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "224:2:160"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "224:42:160"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "217:6:160"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "217:50:160"
                  },
                  "nodeType": "YulIf",
                  "src": "214:2:160"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "303:15:160",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "313:5:160"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "303:6:160"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:160",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:160",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:160",
                "type": ""
              }
            ],
            "src": "14:310:160"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n}",
      "id": 160,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3315:160",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:160",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "63:124:160",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "73:29:160",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:160"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "82:12:160"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:20:160"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "73:5:160"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "165:16:160",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "174:1:160",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "177:1:160",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "167:6:160"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "167:12:160"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "167:12:160"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "124:5:160"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "135:5:160"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "150:3:160",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "155:1:160",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "146:3:160"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "146:11:160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "159:1:160",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "142:3:160"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "142:19:160"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "131:3:160"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "131:31:160"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "121:2:160"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "121:42:160"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "114:6:160"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "114:50:160"
                  },
                  "nodeType": "YulIf",
                  "src": "111:2:160"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "42:6:160",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:160",
                "type": ""
              }
            ],
            "src": "14:173:160"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "330:350:160",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "377:26:160",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "386:6:160"
                            },
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "394:6:160"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "379:6:160"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "379:22:160"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "379:22:160"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "351:7:160"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "360:9:160"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "347:3:160"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "347:23:160"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "372:3:160",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "343:3:160"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "343:33:160"
                  },
                  "nodeType": "YulIf",
                  "src": "340:2:160"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "412:39:160",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "441:9:160"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "422:18:160"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "422:29:160"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "412:6:160"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "460:48:160",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "493:9:160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "504:2:160",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "489:3:160"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "489:18:160"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "470:18:160"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "470:38:160"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "460:6:160"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "517:48:160",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "550:9:160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "561:2:160",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "546:3:160"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "546:18:160"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "527:18:160"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "527:38:160"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "517:6:160"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "574:48:160",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "607:9:160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "618:2:160",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "603:3:160"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "603:18:160"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "584:18:160"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "584:38:160"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "574:6:160"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "631:43:160",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "658:9:160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "669:3:160",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "654:3:160"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "654:19:160"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "641:12:160"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "641:33:160"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "631:6:160"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "264:9:160",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "275:7:160",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "287:6:160",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "295:6:160",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "303:6:160",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "311:6:160",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "319:6:160",
                "type": ""
              }
            ],
            "src": "192:488:160"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "763:219:160",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "809:26:160",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "818:6:160"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "826:6:160"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "811:6:160"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "811:22:160"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "811:22:160"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "784:7:160"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "793:9:160"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "780:3:160"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "780:23:160"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "805:2:160",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "776:3:160"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "776:32:160"
                  },
                  "nodeType": "YulIf",
                  "src": "773:2:160"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "844:29:160",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "863:9:160"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "857:5:160"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "857:16:160"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "848:5:160",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "926:26:160",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "935:6:160"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "943:6:160"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "928:6:160"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "928:22:160"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "928:22:160"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "895:5:160"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "916:5:160"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "909:6:160"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "909:13:160"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "902:6:160"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "902:21:160"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "892:2:160"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "892:32:160"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "885:6:160"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "885:40:160"
                  },
                  "nodeType": "YulIf",
                  "src": "882:2:160"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "961:15:160",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "971:5:160"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "961:6:160"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "729:9:160",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "740:7:160",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "752:6:160",
                "type": ""
              }
            ],
            "src": "685:297:160"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1088:102:160",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1098:26:160",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1110:9:160"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1121:2:160",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1106:3:160"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1106:18:160"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1098:4:160"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1140:9:160"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1155:6:160"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1171:3:160",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1176:1:160",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1167:3:160"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1167:11:160"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1180:1:160",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1163:3:160"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1163:19:160"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1151:3:160"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1151:32:160"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1133:6:160"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1133:51:160"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1133:51:160"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1057:9:160",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1068:6:160",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1079:4:160",
                "type": ""
              }
            ],
            "src": "987:203:160"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1352:218:160",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1362:26:160",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1374:9:160"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1385:2:160",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1370:3:160"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1370:18:160"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1362:4:160"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1397:29:160",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1415:3:160",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1420:1:160",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1411:3:160"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1411:11:160"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1424:1:160",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "1407:3:160"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1407:19:160"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1401:2:160",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1442:9:160"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1457:6:160"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1465:2:160"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1453:3:160"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1453:15:160"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1435:6:160"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1435:34:160"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1435:34:160"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1489:9:160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1500:2:160",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1485:3:160"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1485:18:160"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "1509:6:160"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1517:2:160"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1505:3:160"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1505:15:160"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1478:6:160"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1478:43:160"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1478:43:160"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1541:9:160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1552:2:160",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1537:3:160"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1537:18:160"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "1557:6:160"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1530:6:160"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1530:34:160"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1530:34:160"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1305:9:160",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1316:6:160",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1324:6:160",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1332:6:160",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1343:4:160",
                "type": ""
              }
            ],
            "src": "1195:375:160"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1704:145:160",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1714:26:160",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1726:9:160"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1737:2:160",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1722:3:160"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1722:18:160"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1714:4:160"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1756:9:160"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1771:6:160"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1787:3:160",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1792:1:160",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1783:3:160"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1783:11:160"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1796:1:160",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1779:3:160"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1779:19:160"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1767:3:160"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1767:32:160"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1749:6:160"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1749:51:160"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1749:51:160"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1820:9:160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1831:2:160",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1816:3:160"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1816:18:160"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1836:6:160"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1809:6:160"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1809:34:160"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1809:34:160"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1665:9:160",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1676:6:160",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1684:6:160",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1695:4:160",
                "type": ""
              }
            ],
            "src": "1575:274:160"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2028:171:160",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2045:9:160"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2056:2:160",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2038:6:160"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2038:21:160"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2038:21:160"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2079:9:160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2090:2:160",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2075:3:160"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2075:18:160"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2095:2:160",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2068:6:160"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2068:30:160"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2068:30:160"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2118:9:160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2129:2:160",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2114:3:160"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2114:18:160"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2134:23:160",
                        "type": "",
                        "value": "mint was unsuccesfull"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2107:6:160"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2107:51:160"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2107:51:160"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2167:26:160",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2179:9:160"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2190:2:160",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2175:3:160"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2175:18:160"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2167:4:160"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1350b2dad7d7b58757a2355d63adf6ae087331efc7065dcd5c20158e983e41ff__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2005:9:160",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2019:4:160",
                "type": ""
              }
            ],
            "src": "1854:345:160"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2378:225:160",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2395:9:160"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2406:2:160",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2388:6:160"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2388:21:160"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2388:21:160"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2429:9:160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2440:2:160",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2425:3:160"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2425:18:160"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2445:2:160",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2418:6:160"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2418:30:160"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2418:30:160"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2468:9:160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2479:2:160",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2464:3:160"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2464:18:160"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2484:34:160",
                        "type": "",
                        "value": "_to needs to be an authorised pa"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2457:6:160"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2457:62:160"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2457:62:160"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2539:9:160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2550:2:160",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2535:3:160"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2535:18:160"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2555:5:160",
                        "type": "",
                        "value": "rty"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2528:6:160"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2528:33:160"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2528:33:160"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2570:27:160",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2582:9:160"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2593:3:160",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2578:3:160"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2578:19:160"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2570:4:160"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1d4ee15a91f44db34137ac82ec0b1dc584ac5caade1e816f504ad096e2f4da8e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2355:9:160",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2369:4:160",
                "type": ""
              }
            ],
            "src": "2204:399:160"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2782:171:160",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2799:9:160"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2810:2:160",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2792:6:160"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2792:21:160"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2792:21:160"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2833:9:160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2844:2:160",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2829:3:160"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2829:18:160"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2849:2:160",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2822:6:160"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2822:30:160"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2822:30:160"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2872:9:160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2883:2:160",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2868:3:160"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2868:18:160"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2888:23:160",
                        "type": "",
                        "value": "burn was unsuccesfull"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2861:6:160"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2861:51:160"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2861:51:160"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2921:26:160",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2933:9:160"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2944:2:160",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2929:3:160"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2929:18:160"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2921:4:160"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_2c0c70dc357a15bb53b55a59b38c27d49c5333a7670ae83e8c1aa761edcdb1ab__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2759:9:160",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2773:4:160",
                "type": ""
              }
            ],
            "src": "2608:345:160"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3132:181:160",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3149:9:160"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3160:2:160",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3142:6:160"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3142:21:160"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3142:21:160"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3183:9:160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3194:2:160",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3179:3:160"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3179:18:160"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3199:2:160",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3172:6:160"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3172:30:160"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3172:30:160"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3222:9:160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3233:2:160",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3218:3:160"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3218:18:160"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3238:33:160",
                        "type": "",
                        "value": "_fromToken should be the sender"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3211:6:160"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3211:61:160"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3211:61:160"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3281:26:160",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3293:9:160"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3304:2:160",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3289:3:160"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3289:18:160"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3281:4:160"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a84a4e63be10f8fae2991ce7669741e808fbef3ce6484d315420e08f63f5f13e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3109:9:160",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3123:4:160",
                "type": ""
              }
            ],
            "src": "2958:355:160"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(value4, value4) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n        value3 := abi_decode_address(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_1350b2dad7d7b58757a2355d63adf6ae087331efc7065dcd5c20158e983e41ff__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"mint was unsuccesfull\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1d4ee15a91f44db34137ac82ec0b1dc584ac5caade1e816f504ad096e2f4da8e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"_to needs to be an authorised pa\")\n        mstore(add(headStart, 96), \"rty\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_2c0c70dc357a15bb53b55a59b38c27d49c5333a7670ae83e8c1aa761edcdb1ab__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"burn was unsuccesfull\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a84a4e63be10f8fae2991ce7669741e808fbef3ce6484d315420e08f63f5f13e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"_fromToken should be the sender\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 160,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "413:1006:36:-:0;;;730:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;771:12;:42;;-1:-1:-1;;;;;;771:42:36;-1:-1:-1;;;;;771:42:36;;;;;;;;;;413:1006;;14:310:160;;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;189:16;;-1:-1:-1;;;;;234:31:160;;224:42;;214:2;;285:6;277;270:22;214:2;313:5;95:229;-1:-1:-1;;;95:229:160:o;:::-;413:1006:36;;;;;;",
  "deployedSourceMap": "413:1006:36:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;822:595;;;;;;:::i;:::-;;:::i;:::-;;;967:12;;:25;;-1:-1:-1;;;967:25:36;;-1:-1:-1;;;;;1151:32:160;;;967:25:36;;;1133:51:160;967:12:36;;;;:20;;1106:18:160;;967:25:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;959:73;;;;-1:-1:-1;;;959:73:36;;2406:2:160;959:73:36;;;2388:21:160;2445:2;2425:18;;;2418:30;2484:34;2464:18;;;2457:62;-1:-1:-1;;;2535:18:160;;;2528:33;2578:19;;959:73:36;;;;;;;;;-1:-1:-1;;;;;1046:24:36;;1060:10;1046:24;1038:68;;;;-1:-1:-1;;;1038:68:36;;3160:2:160;1038:68:36;;;3142:21:160;3199:2;3179:18;;;3172:30;3238:33;3218:18;;;3211:61;3289:18;;1038:68:36;3132:181:160;1038:68:36;1171:30;;-1:-1:-1;;;1171:30:36;;-1:-1:-1;;;;;1767:32:160;;;1171:30:36;;;1749:51:160;1816:18;;;1809:34;;;1146:10:36;;1171:14;;;;;;1722:18:160;;1171:30:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1163:64;;;;-1:-1:-1;;;1163:64:36;;2810:2:160;1163:64:36;;;2792:21:160;2849:2;2829:18;;;2822:30;-1:-1:-1;;;2868:18:160;;;2861:51;2929:18;;1163:64:36;2782:171:160;1163:64:36;1288:26;;-1:-1:-1;;;1288:26:36;;-1:-1:-1;;;;;1767:32:160;;;1288:26:36;;;1749:51:160;1816:18;;;1809:34;;;1265:8:36;;1288:12;;;;;;1722:18:160;;1288:26:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1280:60;;;;-1:-1:-1;;;1280:60:36;;2056:2:160;1280:60:36;;;2038:21:160;2095:2;2075:18;;;2068:30;-1:-1:-1;;;2114:18:160;;;2107:51;2175:18;;1280:60:36;2028:171:160;1280:60:36;1351:61;;;-1:-1:-1;;;;;1453:15:160;;;1435:34;;1505:15;;;1500:2;1485:18;;1478:43;1537:18;;;1530:34;;;1351:61:36;;;;;;;;;1385:2:160;1370:18;1351:61:36;;;;;;;822:595;;;;;;;:::o;14:173:160:-;82:20;;-1:-1:-1;;;;;131:31:160;;121:42;;111:2;;177:1;174;167:12;111:2;63:124;;;:::o;192:488::-;;;;;;372:3;360:9;351:7;347:23;343:33;340:2;;;394:6;386;379:22;340:2;422:29;441:9;422:29;:::i;:::-;412:39;;470:38;504:2;493:9;489:18;470:38;:::i;:::-;460:48;;527:38;561:2;550:9;546:18;527:38;:::i;:::-;517:48;;584:38;618:2;607:9;603:18;584:38;:::i;:::-;330:350;;;;-1:-1:-1;330:350:160;;669:3;654:19;641:33;;330:350;-1:-1:-1;;330:350:160:o;685:297::-;;805:2;793:9;784:7;780:23;776:32;773:2;;;826:6;818;811:22;773:2;863:9;857:16;916:5;909:13;902:21;895:5;892:32;882:2;;943:6;935;928:22;882:2;971:5;763:219;-1:-1:-1;;;763:219:160:o",
  "source": "// SPDX-License-Identifier: UNLICENSED\n/**\n * Copyright (C) SettleMint NV - All Rights Reserved\n *\n * Use of this file is strictly prohibited without an active license agreement.\n * Distribution of this file, via any medium, is strictly prohibited.\n *\n * For license inquiries, contact hello@settlemint.com\n */\n\npragma solidity ^0.8.0;\n\nimport '../../authentication/RoleRegistry.sol';\nimport './ERC20Token.sol';\n\ncontract ERC20TokenConverter {\n  // Needs the MINT_ROLE on the UnrestrictedCoin\n  // Needs the BURN_ROLE on the to be relayed coins\n\n  RoleRegistry roleRegistry;\n\n  event ConvertingTransfer(\n    address indexed _from,\n    address _fromToken,\n    address indexed _to,\n    address _toToken,\n    uint256 _amount\n  );\n\n  constructor(address _roleRegistry) {\n    roleRegistry = RoleRegistry(_roleRegistry);\n  }\n\n  function convert(\n    address _from,\n    address _fromToken,\n    address _to,\n    address _toToken,\n    uint256 _amount\n  ) public {\n    require(roleRegistry.hasRole(_to), '_to needs to be an authorised party');\n    require(_fromToken == msg.sender, '_fromToken should be the sender');\n    ERC20Token fromToken = ERC20Token(_fromToken);\n    require(fromToken.burn(_from, _amount), 'burn was unsuccesfull');\n    ERC20Token toToken = ERC20Token(_toToken);\n    require(toToken.mint(_to, _amount), 'mint was unsuccesfull');\n    emit ConvertingTransfer(_from, _fromToken, _to, _toToken, _amount);\n  }\n}\n",
  "sourcePath": "/home/coder/project/contracts/_library/tokens/ERC20/ERC20TokenConverter.sol",
  "ast": {
    "absolutePath": "/home/coder/project/contracts/_library/tokens/ERC20/ERC20TokenConverter.sol",
    "exportedSymbols": {
      "Converter": [
        9626
      ],
      "ERC20Token": [
        8066
      ],
      "ERC20TokenConverter": [
        8168
      ],
      "GateKeeper": [
        1912
      ],
      "IApproveAndCallable": [
        9286
      ],
      "IERC20Token": [
        8533
      ],
      "IRoleRegistry": [
        2384
      ],
      "IWithDecimalFields": [
        9296
      ],
      "IpfsFieldContainer": [
        9698
      ],
      "RoleRegistry": [
        2170
      ],
      "Secured": [
        2348
      ],
      "Syncable": [
        9707
      ]
    },
    "id": 8169,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8068,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "312:23:36"
      },
      {
        "absolutePath": "/home/coder/project/contracts/_library/authentication/RoleRegistry.sol",
        "file": "../../authentication/RoleRegistry.sol",
        "id": 8069,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8169,
        "sourceUnit": 2171,
        "src": "337:47:36",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/coder/project/contracts/_library/tokens/ERC20/ERC20Token.sol",
        "file": "./ERC20Token.sol",
        "id": 8070,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8169,
        "sourceUnit": 8067,
        "src": "385:26:36",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 8168,
        "linearizedBaseContracts": [
          8168
        ],
        "name": "ERC20TokenConverter",
        "nameLocation": "422:19:36",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 8073,
            "mutability": "mutable",
            "name": "roleRegistry",
            "nameLocation": "561:12:36",
            "nodeType": "VariableDeclaration",
            "scope": 8168,
            "src": "548:25:36",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_RoleRegistry_$2170",
              "typeString": "contract RoleRegistry"
            },
            "typeName": {
              "id": 8072,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 8071,
                "name": "RoleRegistry",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2170,
                "src": "548:12:36"
              },
              "referencedDeclaration": 2170,
              "src": "548:12:36",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RoleRegistry_$2170",
                "typeString": "contract RoleRegistry"
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 8085,
            "name": "ConvertingTransfer",
            "nameLocation": "584:18:36",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8084,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8075,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "624:5:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8085,
                  "src": "608:21:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8074,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "608:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8077,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_fromToken",
                  "nameLocation": "643:10:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8085,
                  "src": "635:18:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8076,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "635:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8079,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "675:3:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8085,
                  "src": "659:19:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8078,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "659:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8081,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_toToken",
                  "nameLocation": "692:8:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8085,
                  "src": "684:16:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8080,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "684:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8083,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "714:7:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8085,
                  "src": "706:15:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8082,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "706:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "602:123:36"
            },
            "src": "578:148:36"
          },
          {
            "body": {
              "id": 8096,
              "nodeType": "Block",
              "src": "765:53:36",
              "statements": [
                {
                  "expression": {
                    "id": 8094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8090,
                      "name": "roleRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8073,
                      "src": "771:12:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RoleRegistry_$2170",
                        "typeString": "contract RoleRegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 8092,
                          "name": "_roleRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8087,
                          "src": "799:13:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 8091,
                        "name": "RoleRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2170,
                        "src": "786:12:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_RoleRegistry_$2170_$",
                          "typeString": "type(contract RoleRegistry)"
                        }
                      },
                      "id": 8093,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "786:27:36",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RoleRegistry_$2170",
                        "typeString": "contract RoleRegistry"
                      }
                    },
                    "src": "771:42:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RoleRegistry_$2170",
                      "typeString": "contract RoleRegistry"
                    }
                  },
                  "id": 8095,
                  "nodeType": "ExpressionStatement",
                  "src": "771:42:36"
                }
              ]
            },
            "id": 8097,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8088,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8087,
                  "mutability": "mutable",
                  "name": "_roleRegistry",
                  "nameLocation": "750:13:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8097,
                  "src": "742:21:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8086,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "742:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "741:23:36"
            },
            "returnParameters": {
              "id": 8089,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "765:0:36"
            },
            "scope": 8168,
            "src": "730:88:36",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8166,
              "nodeType": "Block",
              "src": "953:464:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 8113,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8103,
                            "src": "988:3:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 8111,
                            "name": "roleRegistry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8073,
                            "src": "967:12:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RoleRegistry_$2170",
                              "typeString": "contract RoleRegistry"
                            }
                          },
                          "id": 8112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "hasRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1986,
                          "src": "967:20:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 8114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "967:25:36",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5f746f206e6565647320746f20626520616e20617574686f7269736564207061727479",
                        "id": 8115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "994:37:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1d4ee15a91f44db34137ac82ec0b1dc584ac5caade1e816f504ad096e2f4da8e",
                          "typeString": "literal_string \"_to needs to be an authorised party\""
                        },
                        "value": "_to needs to be an authorised party"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1d4ee15a91f44db34137ac82ec0b1dc584ac5caade1e816f504ad096e2f4da8e",
                          "typeString": "literal_string \"_to needs to be an authorised party\""
                        }
                      ],
                      "id": 8110,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "959:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "959:73:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8117,
                  "nodeType": "ExpressionStatement",
                  "src": "959:73:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8119,
                          "name": "_fromToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8101,
                          "src": "1046:10:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 8120,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1060:3:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1060:10:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1046:24:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5f66726f6d546f6b656e2073686f756c64206265207468652073656e646572",
                        "id": 8123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1072:33:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a84a4e63be10f8fae2991ce7669741e808fbef3ce6484d315420e08f63f5f13e",
                          "typeString": "literal_string \"_fromToken should be the sender\""
                        },
                        "value": "_fromToken should be the sender"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a84a4e63be10f8fae2991ce7669741e808fbef3ce6484d315420e08f63f5f13e",
                          "typeString": "literal_string \"_fromToken should be the sender\""
                        }
                      ],
                      "id": 8118,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1038:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1038:68:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8125,
                  "nodeType": "ExpressionStatement",
                  "src": "1038:68:36"
                },
                {
                  "assignments": [
                    8128
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8128,
                      "mutability": "mutable",
                      "name": "fromToken",
                      "nameLocation": "1123:9:36",
                      "nodeType": "VariableDeclaration",
                      "scope": 8166,
                      "src": "1112:20:36",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Token_$8066",
                        "typeString": "contract ERC20Token"
                      },
                      "typeName": {
                        "id": 8127,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 8126,
                          "name": "ERC20Token",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 8066,
                          "src": "1112:10:36"
                        },
                        "referencedDeclaration": 8066,
                        "src": "1112:10:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Token_$8066",
                          "typeString": "contract ERC20Token"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8132,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 8130,
                        "name": "_fromToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8101,
                        "src": "1146:10:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 8129,
                      "name": "ERC20Token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8066,
                      "src": "1135:10:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20Token_$8066_$",
                        "typeString": "type(contract ERC20Token)"
                      }
                    },
                    "id": 8131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1135:22:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Token_$8066",
                      "typeString": "contract ERC20Token"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1112:45:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 8136,
                            "name": "_from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8099,
                            "src": "1186:5:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 8137,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8107,
                            "src": "1193:7:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 8134,
                            "name": "fromToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8128,
                            "src": "1171:9:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Token_$8066",
                              "typeString": "contract ERC20Token"
                            }
                          },
                          "id": 8135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "burn",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7550,
                          "src": "1171:14:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 8138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1171:30:36",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6275726e2077617320756e73756363657366756c6c",
                        "id": 8139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1203:23:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2c0c70dc357a15bb53b55a59b38c27d49c5333a7670ae83e8c1aa761edcdb1ab",
                          "typeString": "literal_string \"burn was unsuccesfull\""
                        },
                        "value": "burn was unsuccesfull"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2c0c70dc357a15bb53b55a59b38c27d49c5333a7670ae83e8c1aa761edcdb1ab",
                          "typeString": "literal_string \"burn was unsuccesfull\""
                        }
                      ],
                      "id": 8133,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1163:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1163:64:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8141,
                  "nodeType": "ExpressionStatement",
                  "src": "1163:64:36"
                },
                {
                  "assignments": [
                    8144
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8144,
                      "mutability": "mutable",
                      "name": "toToken",
                      "nameLocation": "1244:7:36",
                      "nodeType": "VariableDeclaration",
                      "scope": 8166,
                      "src": "1233:18:36",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Token_$8066",
                        "typeString": "contract ERC20Token"
                      },
                      "typeName": {
                        "id": 8143,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 8142,
                          "name": "ERC20Token",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 8066,
                          "src": "1233:10:36"
                        },
                        "referencedDeclaration": 8066,
                        "src": "1233:10:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Token_$8066",
                          "typeString": "contract ERC20Token"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8148,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 8146,
                        "name": "_toToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8105,
                        "src": "1265:8:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 8145,
                      "name": "ERC20Token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8066,
                      "src": "1254:10:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20Token_$8066_$",
                        "typeString": "type(contract ERC20Token)"
                      }
                    },
                    "id": 8147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1254:20:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Token_$8066",
                      "typeString": "contract ERC20Token"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1233:41:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 8152,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8103,
                            "src": "1301:3:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 8153,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8107,
                            "src": "1306:7:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 8150,
                            "name": "toToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8144,
                            "src": "1288:7:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Token_$8066",
                              "typeString": "contract ERC20Token"
                            }
                          },
                          "id": 8151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mint",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7426,
                          "src": "1288:12:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 8154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1288:26:36",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d696e742077617320756e73756363657366756c6c",
                        "id": 8155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1316:23:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1350b2dad7d7b58757a2355d63adf6ae087331efc7065dcd5c20158e983e41ff",
                          "typeString": "literal_string \"mint was unsuccesfull\""
                        },
                        "value": "mint was unsuccesfull"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1350b2dad7d7b58757a2355d63adf6ae087331efc7065dcd5c20158e983e41ff",
                          "typeString": "literal_string \"mint was unsuccesfull\""
                        }
                      ],
                      "id": 8149,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1280:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1280:60:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8157,
                  "nodeType": "ExpressionStatement",
                  "src": "1280:60:36"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 8159,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8099,
                        "src": "1370:5:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8160,
                        "name": "_fromToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8101,
                        "src": "1377:10:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8161,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8103,
                        "src": "1389:3:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8162,
                        "name": "_toToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8105,
                        "src": "1394:8:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8163,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8107,
                        "src": "1404:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8158,
                      "name": "ConvertingTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8085,
                      "src": "1351:18:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,address,uint256)"
                      }
                    },
                    "id": 8164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1351:61:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8165,
                  "nodeType": "EmitStatement",
                  "src": "1346:66:36"
                }
              ]
            },
            "functionSelector": "8a8ad2d7",
            "id": 8167,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "convert",
            "nameLocation": "831:7:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8099,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "852:5:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8167,
                  "src": "844:13:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8098,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "844:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8101,
                  "mutability": "mutable",
                  "name": "_fromToken",
                  "nameLocation": "871:10:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8167,
                  "src": "863:18:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8100,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "863:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8103,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "895:3:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8167,
                  "src": "887:11:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8102,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "887:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8105,
                  "mutability": "mutable",
                  "name": "_toToken",
                  "nameLocation": "912:8:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8167,
                  "src": "904:16:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8104,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "904:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8107,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "934:7:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8167,
                  "src": "926:15:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8106,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "926:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "838:107:36"
            },
            "returnParameters": {
              "id": 8109,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "953:0:36"
            },
            "scope": 8168,
            "src": "822:595:36",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 8169,
        "src": "413:1006:36"
      }
    ],
    "src": "312:1108:36"
  },
  "legacyAST": {
    "absolutePath": "/home/coder/project/contracts/_library/tokens/ERC20/ERC20TokenConverter.sol",
    "exportedSymbols": {
      "Converter": [
        9626
      ],
      "ERC20Token": [
        8066
      ],
      "ERC20TokenConverter": [
        8168
      ],
      "GateKeeper": [
        1912
      ],
      "IApproveAndCallable": [
        9286
      ],
      "IERC20Token": [
        8533
      ],
      "IRoleRegistry": [
        2384
      ],
      "IWithDecimalFields": [
        9296
      ],
      "IpfsFieldContainer": [
        9698
      ],
      "RoleRegistry": [
        2170
      ],
      "Secured": [
        2348
      ],
      "Syncable": [
        9707
      ]
    },
    "id": 8169,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8068,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "312:23:36"
      },
      {
        "absolutePath": "/home/coder/project/contracts/_library/authentication/RoleRegistry.sol",
        "file": "../../authentication/RoleRegistry.sol",
        "id": 8069,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8169,
        "sourceUnit": 2171,
        "src": "337:47:36",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/coder/project/contracts/_library/tokens/ERC20/ERC20Token.sol",
        "file": "./ERC20Token.sol",
        "id": 8070,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8169,
        "sourceUnit": 8067,
        "src": "385:26:36",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 8168,
        "linearizedBaseContracts": [
          8168
        ],
        "name": "ERC20TokenConverter",
        "nameLocation": "422:19:36",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 8073,
            "mutability": "mutable",
            "name": "roleRegistry",
            "nameLocation": "561:12:36",
            "nodeType": "VariableDeclaration",
            "scope": 8168,
            "src": "548:25:36",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_RoleRegistry_$2170",
              "typeString": "contract RoleRegistry"
            },
            "typeName": {
              "id": 8072,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 8071,
                "name": "RoleRegistry",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2170,
                "src": "548:12:36"
              },
              "referencedDeclaration": 2170,
              "src": "548:12:36",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RoleRegistry_$2170",
                "typeString": "contract RoleRegistry"
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 8085,
            "name": "ConvertingTransfer",
            "nameLocation": "584:18:36",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8084,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8075,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "624:5:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8085,
                  "src": "608:21:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8074,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "608:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8077,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_fromToken",
                  "nameLocation": "643:10:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8085,
                  "src": "635:18:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8076,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "635:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8079,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "675:3:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8085,
                  "src": "659:19:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8078,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "659:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8081,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_toToken",
                  "nameLocation": "692:8:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8085,
                  "src": "684:16:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8080,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "684:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8083,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "714:7:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8085,
                  "src": "706:15:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8082,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "706:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "602:123:36"
            },
            "src": "578:148:36"
          },
          {
            "body": {
              "id": 8096,
              "nodeType": "Block",
              "src": "765:53:36",
              "statements": [
                {
                  "expression": {
                    "id": 8094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8090,
                      "name": "roleRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8073,
                      "src": "771:12:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RoleRegistry_$2170",
                        "typeString": "contract RoleRegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 8092,
                          "name": "_roleRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8087,
                          "src": "799:13:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 8091,
                        "name": "RoleRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2170,
                        "src": "786:12:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_RoleRegistry_$2170_$",
                          "typeString": "type(contract RoleRegistry)"
                        }
                      },
                      "id": 8093,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "786:27:36",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RoleRegistry_$2170",
                        "typeString": "contract RoleRegistry"
                      }
                    },
                    "src": "771:42:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RoleRegistry_$2170",
                      "typeString": "contract RoleRegistry"
                    }
                  },
                  "id": 8095,
                  "nodeType": "ExpressionStatement",
                  "src": "771:42:36"
                }
              ]
            },
            "id": 8097,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8088,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8087,
                  "mutability": "mutable",
                  "name": "_roleRegistry",
                  "nameLocation": "750:13:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8097,
                  "src": "742:21:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8086,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "742:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "741:23:36"
            },
            "returnParameters": {
              "id": 8089,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "765:0:36"
            },
            "scope": 8168,
            "src": "730:88:36",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8166,
              "nodeType": "Block",
              "src": "953:464:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 8113,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8103,
                            "src": "988:3:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 8111,
                            "name": "roleRegistry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8073,
                            "src": "967:12:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RoleRegistry_$2170",
                              "typeString": "contract RoleRegistry"
                            }
                          },
                          "id": 8112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "hasRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1986,
                          "src": "967:20:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 8114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "967:25:36",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5f746f206e6565647320746f20626520616e20617574686f7269736564207061727479",
                        "id": 8115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "994:37:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1d4ee15a91f44db34137ac82ec0b1dc584ac5caade1e816f504ad096e2f4da8e",
                          "typeString": "literal_string \"_to needs to be an authorised party\""
                        },
                        "value": "_to needs to be an authorised party"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1d4ee15a91f44db34137ac82ec0b1dc584ac5caade1e816f504ad096e2f4da8e",
                          "typeString": "literal_string \"_to needs to be an authorised party\""
                        }
                      ],
                      "id": 8110,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "959:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "959:73:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8117,
                  "nodeType": "ExpressionStatement",
                  "src": "959:73:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8119,
                          "name": "_fromToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8101,
                          "src": "1046:10:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 8120,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1060:3:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1060:10:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1046:24:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5f66726f6d546f6b656e2073686f756c64206265207468652073656e646572",
                        "id": 8123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1072:33:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a84a4e63be10f8fae2991ce7669741e808fbef3ce6484d315420e08f63f5f13e",
                          "typeString": "literal_string \"_fromToken should be the sender\""
                        },
                        "value": "_fromToken should be the sender"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a84a4e63be10f8fae2991ce7669741e808fbef3ce6484d315420e08f63f5f13e",
                          "typeString": "literal_string \"_fromToken should be the sender\""
                        }
                      ],
                      "id": 8118,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1038:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1038:68:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8125,
                  "nodeType": "ExpressionStatement",
                  "src": "1038:68:36"
                },
                {
                  "assignments": [
                    8128
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8128,
                      "mutability": "mutable",
                      "name": "fromToken",
                      "nameLocation": "1123:9:36",
                      "nodeType": "VariableDeclaration",
                      "scope": 8166,
                      "src": "1112:20:36",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Token_$8066",
                        "typeString": "contract ERC20Token"
                      },
                      "typeName": {
                        "id": 8127,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 8126,
                          "name": "ERC20Token",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 8066,
                          "src": "1112:10:36"
                        },
                        "referencedDeclaration": 8066,
                        "src": "1112:10:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Token_$8066",
                          "typeString": "contract ERC20Token"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8132,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 8130,
                        "name": "_fromToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8101,
                        "src": "1146:10:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 8129,
                      "name": "ERC20Token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8066,
                      "src": "1135:10:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20Token_$8066_$",
                        "typeString": "type(contract ERC20Token)"
                      }
                    },
                    "id": 8131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1135:22:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Token_$8066",
                      "typeString": "contract ERC20Token"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1112:45:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 8136,
                            "name": "_from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8099,
                            "src": "1186:5:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 8137,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8107,
                            "src": "1193:7:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 8134,
                            "name": "fromToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8128,
                            "src": "1171:9:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Token_$8066",
                              "typeString": "contract ERC20Token"
                            }
                          },
                          "id": 8135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "burn",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7550,
                          "src": "1171:14:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 8138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1171:30:36",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6275726e2077617320756e73756363657366756c6c",
                        "id": 8139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1203:23:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2c0c70dc357a15bb53b55a59b38c27d49c5333a7670ae83e8c1aa761edcdb1ab",
                          "typeString": "literal_string \"burn was unsuccesfull\""
                        },
                        "value": "burn was unsuccesfull"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2c0c70dc357a15bb53b55a59b38c27d49c5333a7670ae83e8c1aa761edcdb1ab",
                          "typeString": "literal_string \"burn was unsuccesfull\""
                        }
                      ],
                      "id": 8133,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1163:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1163:64:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8141,
                  "nodeType": "ExpressionStatement",
                  "src": "1163:64:36"
                },
                {
                  "assignments": [
                    8144
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8144,
                      "mutability": "mutable",
                      "name": "toToken",
                      "nameLocation": "1244:7:36",
                      "nodeType": "VariableDeclaration",
                      "scope": 8166,
                      "src": "1233:18:36",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Token_$8066",
                        "typeString": "contract ERC20Token"
                      },
                      "typeName": {
                        "id": 8143,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 8142,
                          "name": "ERC20Token",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 8066,
                          "src": "1233:10:36"
                        },
                        "referencedDeclaration": 8066,
                        "src": "1233:10:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Token_$8066",
                          "typeString": "contract ERC20Token"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8148,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 8146,
                        "name": "_toToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8105,
                        "src": "1265:8:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 8145,
                      "name": "ERC20Token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8066,
                      "src": "1254:10:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20Token_$8066_$",
                        "typeString": "type(contract ERC20Token)"
                      }
                    },
                    "id": 8147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1254:20:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Token_$8066",
                      "typeString": "contract ERC20Token"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1233:41:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 8152,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8103,
                            "src": "1301:3:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 8153,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8107,
                            "src": "1306:7:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 8150,
                            "name": "toToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8144,
                            "src": "1288:7:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Token_$8066",
                              "typeString": "contract ERC20Token"
                            }
                          },
                          "id": 8151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mint",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7426,
                          "src": "1288:12:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 8154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1288:26:36",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d696e742077617320756e73756363657366756c6c",
                        "id": 8155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1316:23:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1350b2dad7d7b58757a2355d63adf6ae087331efc7065dcd5c20158e983e41ff",
                          "typeString": "literal_string \"mint was unsuccesfull\""
                        },
                        "value": "mint was unsuccesfull"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1350b2dad7d7b58757a2355d63adf6ae087331efc7065dcd5c20158e983e41ff",
                          "typeString": "literal_string \"mint was unsuccesfull\""
                        }
                      ],
                      "id": 8149,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1280:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1280:60:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8157,
                  "nodeType": "ExpressionStatement",
                  "src": "1280:60:36"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 8159,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8099,
                        "src": "1370:5:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8160,
                        "name": "_fromToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8101,
                        "src": "1377:10:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8161,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8103,
                        "src": "1389:3:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8162,
                        "name": "_toToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8105,
                        "src": "1394:8:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8163,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8107,
                        "src": "1404:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8158,
                      "name": "ConvertingTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8085,
                      "src": "1351:18:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,address,uint256)"
                      }
                    },
                    "id": 8164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1351:61:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8165,
                  "nodeType": "EmitStatement",
                  "src": "1346:66:36"
                }
              ]
            },
            "functionSelector": "8a8ad2d7",
            "id": 8167,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "convert",
            "nameLocation": "831:7:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8099,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "852:5:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8167,
                  "src": "844:13:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8098,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "844:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8101,
                  "mutability": "mutable",
                  "name": "_fromToken",
                  "nameLocation": "871:10:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8167,
                  "src": "863:18:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8100,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "863:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8103,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "895:3:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8167,
                  "src": "887:11:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8102,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "887:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8105,
                  "mutability": "mutable",
                  "name": "_toToken",
                  "nameLocation": "912:8:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8167,
                  "src": "904:16:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8104,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "904:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8107,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "934:7:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8167,
                  "src": "926:15:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8106,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "926:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "838:107:36"
            },
            "returnParameters": {
              "id": 8109,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "953:0:36"
            },
            "scope": 8168,
            "src": "822:595:36",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 8169,
        "src": "413:1006:36"
      }
    ],
    "src": "312:1108:36"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.3+commit.8d00100c.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-08-03T10:03:35.208Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}